from aiogram import types, Router
from aiogram.filters import Command
import logging
from database import Database

logger = logging.getLogger(__name__)
router = Router()

@router.message(Command("start"))
async def start_handler(message: types.Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    try:
        db = Database()
        user = db.get_user(message.from_user.id)
        if not user:
            db.add_user(
                telegram_id=message.from_user.id,
                full_name=message.from_user.full_name,
                username=message.from_user.username
            )
        await message.answer(
            "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –§–æ—Ç–æ—Å—Ç—É–¥–∏–∏ SVET üì∏\n\n"
            "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "/booking - –ó–∞–ø–∏—Å–∞—Ç—å—Å—è\n"
            "/my_bookings - –ú–æ–∏ –∑–∞–ø–∏—Å–∏\n"
            "/help - –ü–æ–º–æ—â—å"
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞: {e}", exc_info=True)

@router.message(Command("booking"))
async def booking_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /booking"""
    await message.answer("üìÖ –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–ì–ì–ì-–ú–ú-–î–î –ß–ß:–ú–ú")

@router.message(Command("my_bookings"))
async def my_bookings_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /my_bookings"""
    db = Database()
    bookings = db.get_upcoming_sessions(message.from_user.id)
    response = "–í–∞—à–∏ –∑–∞–ø–∏—Å–∏:\n" + "\n".join(
        f"üìÖ {b.session_date.strftime('%d.%m.%Y %H:%M')}" 
        for b in bookings
    ) if bookings else "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π"
    await message.answer(response)
